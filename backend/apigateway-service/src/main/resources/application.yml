server:
  port: 8080

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins: "http://localhost:3002"
            allowedHeaders:
              - authorization
              - content-type
            allowedMethods:
              - GET
              - POST
              - PUT
              - OPTIONS
              - HEAD
              - DELETE
      routes:
        - id: business-service
          uri: lb://BUSINESS-SERVICE
          predicates:
            - Path=/business-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/business-service/(?<segment>.*), /$\{segment}
        - id: business-service
          uri: lb://BUSINESS-SERVICE
          predicates:
            - Path=/business-service/api/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/business-service/(?<segment>.*), /$\{segment}
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/**
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}
        - id: kafka-service
          uri: lb://KAFKA-SERVICE
          predicates:
            - Path=/kafka-service/**
          filters:
            - RewritePath=/kafka-service/(?<segment>.*), /$\{segment}

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

logging:
  level:
    com.artrend.apigatewayservice: debug

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus