server:
  port: 8080

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance-id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: business-service
          uri: lb://BUSINESS-SERVICE
          predicates:
            - Path=/business-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/business-service/(?<segment>.*), /$\{segment}
        - id: business-service
          uri: lb://BUSINESS-SERVICE
          predicates:
            - Path=/business-service/paintings/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/business-service/(?<segment>.*), /$\{segment}
        - id: business-service
          uri: lb://BUSINESS-SERVICE
          predicates:
            - Path=/business-service/users/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/business-service/(?<segment>.*), /$\{segment}
#        - id: recommend-service
#          uri: lb://RECOMMEND-SERVICE
#          predicates:
#            - Path=/recommend-service/actuator/**
#            - Method=GET,POST
#        - filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/recommend-service/(?<segment>.*), /$\{segment}
#        - id: recommend-service
#          uri: lb://RECOMMEND-SERVICE
#          predicates:
#            - Path=/recommend-service/**
#            - Method=GET, POST
#        - filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/recommend-service/(?<segment>.*), /$\{segment}

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus
